import concurso.*
import participantes.*
import jurado.*

describe "tests de Un jurado" {
    test "valoracin promedio de tylorSwift es 10" {
        concurso.inscribirParticipante(tylorSwift)
        concurso.valorarAUnParticipante(tylorSwift)
        assert.equals(10, tylorSwift.valoracionPromedio())
      
    }

  test "test sobre mozart y tylorSwift" {
    assert.equals(10, mozart.valorar(tylorSwift))
  }

    test "test sobre mozart y tylorSwift despues de ajustes" {
        mozart.recibeAjustes()
        assert.equals(8, mozart.valorar(tylorSwift))
    }

    test "test sobre beethoven y morat" {
        assert.equals(10, beethoven.valorar(morat))
    }
}

describe "tests sobre entrenamiento" {
  test "los participantes entrenan, tylorSwift y morat reciben sus modificaciones" {
    concurso.inscribirParticipante(tylorSwift)
    concurso.inscribirParticipante(morat)
    concurso.entrenar()
    assert.equals(2, tylorSwift.costoDeBanda())
    assert.equals(3, morat.integrantesDelGrupo().size())

  }

  test "beethoven valora a badbunny y le parece espantoso" {
    assert.equals(3, beethoven.valorar(badBunny))
  }

  test "beethoven recibe una flor y valora a badbunny" {
    badBunny.practicar()
    assert.equals(8, beethoven.valorar(badBunny))
  }
}

describe "tests sobre eventos especiales" {
  test "beethoven recibe una flor y valora a badbunny" {
    badBunny.practicar()
    assert.equals(8, beethoven.valorar(badBunny))
  }

  test "el jurado recibe ajustes y valora a tylorSwift y morat" {
    concurso.juradoRecibeUnAjuste()
    assert.equals(8, mozart.valorar(tylorSwift))
    assert.equals(10, beethoven.valorar(morat))
  }

  test "Le llegan buenas noticias a Bethoven por lo que pasa a estar entusiasmado,
con nivel 5. Valora a badbunny" {
    beethoven.lleganBuenasNoticias()
    assert.equals(7, beethoven.valorar(badBunny))
  }

  test "el concurso decide ampliar su escenario en 10m2 " {
    concurso.ampliarEscenario(10)
    assert.equals(30, concurso.escenario())
    
  }
}

describe "tests sobre concurso completo" {
  test "el ganador del concurso es morat" {
    concurso.inscribirParticipante(tylorSwift)
    concurso.inscribirParticipante(morat)
    concurso.inscribirParticipante(silvioRodriguez)
    concurso.inscribirParticipante(badBunny)

    concurso.valorarATodosLosParticipantesInscriptos()

    assert.equals(morat, concurso.ganadorDelConcurso())
    
  }
}